        
                             C A N T E R A

                              release 1.4

                               4/12/2003

      Copyright (c) 2001-2003 California Institute of Technology



License information
===================

See the file "License.txt" for information on the terms & conditions
for usage, and a DISCLAIMER OF ALL WARRANTIES.

All trademarks referenced herein are property of their respective
holders.



Building Cantera from the source code
=====================================


1) Unix/linux/cygwin build procedure
------------------------------------

Run the 'configure' script to build the Makefiles. By default, 'make install' 
will install under '/usr/local.' If you want to install Cantera somewhere else,
run 'configure' with the 'prefix' option:

configure --prefix=$HOME/my_cantera_dir

If necessary, edit 'configure' to set options appropriate for your
system. As shipped, the configure script is set up to build Cantera on
a linux system.

After running 'configure', type:

make
make install

The last one may need to be run as super-user.

By default, this procedure also builds the Python and MATLAB interfaces.
Edit 'configure' to disable building these if desired. 

To use either the Python or Matlab interfaces, the shared library file
installed in '/usr/local/lib' (or wherever you installed it) must be on the
library search path. Set LD_LIBRARY_PATH if necessary:

export LD_LIBRARY_PATH=$HOME/my_cantera_dir/lib



2) Windows Build Procedure
--------------------------

Cantera can be built under Windows using Visual C++ 6.0 and Compaq Visual
Fortran 6.0. In the 'win32' directory, open workspace 'cantera.dsw'. Set
the active project to 'examples', and the active configuration to
'Win32 - Release'. Build the project, and execute 'examples.exe' from
the Build menu to verify that it works.

If you plan to build the Python or MATLAB interfaces, you also need to
build project 'ct'. This creates a DLL file which by default
is placed in the Windows system directory. Edit the project settings if you want
to put it somewhere else. 



Configuring Matlab
---------------------

The Matlab toolbox uses one compiled MEX program written in C++.
Before you can build it from the source, Matlab needs to be configured
for your compiler. In Matlab type:

mex -setup

and enter the number for the compiler you wish to use.

To build the MEX file needed for the Matlab toolbox, within Matlab
go to to the 'cantera' directory containing the toolbox and type
'buildux' on unix/linux/Mac OS X, or 'buildwin' on Windows.



Configuring Python
---------------------

Before you can build the Python interface from the source, you need to
have Python 2.0 or greater, you need to be able to write into its
'Lib/site-packages' directory, and the 'Numeric' package must be
installed. If any of these are not the case, run the Python script
'ctupdate.py' found in the 'tools/bin' directory to download and
install Python and Numeric, or install them yourself.
